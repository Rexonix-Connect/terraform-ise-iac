#
# ################################################################################
#
# This file was automatically generated with ./gen/generate_module.py
#          Do not edit this file directly.
#          More information in repository README.md
#
# ################################################################################
#
#
# ==================================================================
# LICENSE TIER STATE 
# ==================================================================
#
# | Attribute Name | Type | Required | Description |
# |--------------|------|----------|-------------|
# | licenses | List | True | List of licenses |
#

locals {
  # Get defaults from configuration or empty map if not present
  defaults_license_tier_state = try(local.defaults.ise.system.license_tier_state, {})

  # License Tier State (with defaults)
  license_tier_state = [for item in try(local.ise.system.license_tier_state, []) : merge(
    local.defaults_license_tier_state, # defaults
    item, # original item
    { # Nested merges for complex attributes
      licenses = [for i in try(item.licenses, []) : merge(
        try(local.defaults_license_tier_state.licenses, {}),
        i
      )]
    }
  )]
}

# Create license tier state
resource "ise_license_tier_state" "license_tier_state" {
  for_each = { for item in try(local.license_tier_state, []) : item.name => item }

  # General attributes
  licenses = try([for i in each.value.licenses : {
    name = try(i.name, null),
    status = try(i.status, null)
  }], null)
}
#
# ==================================================================
# REPOSITORY 
# ==================================================================
#
# | Attribute Name | Type | Required | Description |
# |--------------|------|----------|-------------|
# | name | String | True | Repository name should be less than 80 characters and can contain alphanumeric, underscore, hyphen and dot characters. |
# | protocol | String | True | Protocol |
# | path | String | True | Path should always start with \"/\" and can contain alphanumeric, underscore, hyphen and dot characters. |
# | server_name | String | False | Name of the server |
# | user_name | String | False | User name |
# | password | String | False | Password can contain alphanumeric and/or special characters. |
# | enable_pki | Bool | False | Enable PKI |
#

locals {
  # Get defaults from configuration or empty map if not present
  defaults_repository = try(local.defaults.ise.system.repository, {})

  # Repository (with defaults)
  repository = [for item in try(local.ise.system.repository, []) : merge(
    local.defaults_repository, # defaults
    item, # original item
    { # Nested merges for complex attributes
    }
  )]
}

# Create repository
resource "ise_repository" "repository" {
  for_each = { for item in try(local.repository, []) : item.name => item }

  # General attributes
  name = try(each.value.name, null)
  protocol = try(each.value.protocol, null)
  path = try(each.value.path, null)
  server_name = try(each.value.server_name, null)
  user_name = try(each.value.user_name, null)
  password = sensitive(try(each.value.password, null))
  enable_pki = try(each.value.enable_pki, null)
  
  lifecycle {
    ignore_changes = [password, enable_pki]
  }
}
